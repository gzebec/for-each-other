// <auto-generated />
using System;
using BPUIO_OneForEachOther.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BPUIO_OneForEachOther.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BPUIO_OneForEachOther.Models.AuthenticationScheme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2")
                        .IsRequired();

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(50)")
                        .IsRequired();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .IsRequired();

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(30)")
                        .IsRequired();

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2")
                        .IsRequired();

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(50)")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("cv_authentication_schemes");
                });

            modelBuilder.Entity("BPUIO_OneForEachOther.Models.Borough", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CityId")
                        .HasColumnType("int")
                        .IsRequired();

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(50)")
                        .IsRequired();

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2")
                        .IsRequired();

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(50)")
                        .IsRequired();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(255)")
                        .IsRequired();

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(30)")
                        .IsRequired();

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2")
                        .IsRequired();

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(50)")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("cv_boroughs");
                });

            modelBuilder.Entity("BPUIO_OneForEachOther.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(50)")
                        .IsRequired();

                    b.Property<int>("CountryId")
                        .HasColumnType("int")
                        .IsRequired();

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2")
                        .IsRequired();

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(50)")
                        .IsRequired();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(255)")
                        .IsRequired();

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(30)")
                        .IsRequired();

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2")
                        .IsRequired();

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(50)")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("cv_cities");
                });

            modelBuilder.Entity("BPUIO_OneForEachOther.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(50)")
                        .IsRequired();

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2")
                        .IsRequired();

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(50)")
                        .IsRequired();

                    b.Property<string>("IconUrl")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(5)")
                        .IsRequired();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(255)")
                        .IsRequired();

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(30)")
                        .IsRequired();

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2")
                        .IsRequired();

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(50)")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("cv_countries");
                });

            modelBuilder.Entity("BPUIO_OneForEachOther.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(255)")
                        .IsRequired();

                    b.Property<int>("BoroughId")
                        .HasColumnType("int")
                        .IsRequired();

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2")
                        .IsRequired();

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(50)")
                        .IsRequired();

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("datetime2")
                        .IsRequired();

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(50)")
                        .IsRequired();

                    b.Property<string>("GdprConsent")
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime>("GdprConsentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(50)")
                        .IsRequired();

                    b.Property<decimal>("Lat")
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("Lng")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("PaymentType")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(30)")
                        .IsRequired();

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2")
                        .IsRequired();

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar50)")
                        .IsRequired();

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BoroughId");

                    b.ToTable("cv_orders");
                });

            modelBuilder.Entity("BPUIO_OneForEachOther.Models.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2")
                        .IsRequired();

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(50)")
                        .IsRequired();

                    b.Property<string>("Item")
                        .HasColumnType("nvarchar(255)")
                        .IsRequired();

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .IsRequired();

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)")
                        .IsRequired();

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(30)")
                        .IsRequired();

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2")
                        .IsRequired();

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(50)")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("cv_order_details");
                });

            modelBuilder.Entity("BPUIO_OneForEachOther.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2")
                        .IsRequired();

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(50)")
                        .IsRequired();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(500)")
                        .IsRequired();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(255)")
                        .IsRequired();

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(30)")
                        .IsRequired();

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2")
                        .IsRequired();

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(50)")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("cv_roles");
                });

            modelBuilder.Entity("BPUIO_OneForEachOther.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("AuthenticationSchemeId")
                        .HasColumnType("int")
                        .IsRequired();

                    b.Property<int>("CountryId")
                        .HasColumnType("int")
                        .IsRequired();

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2")
                        .IsRequired();

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(50)")
                        .IsRequired();

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(50)")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(50)")
                        .IsRequired();

                    b.Property<string>("GdprConsent")
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime>("GdprConsentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(50)")
                        .IsRequired();

                    b.Property<decimal>("Lat")
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("Lng")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(50)")
                        .IsRequired();

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(30)")
                        .IsRequired();

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2")
                        .IsRequired();

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(50)")
                        .IsRequired();

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(50)")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("AuthenticationSchemeId");

                    b.HasIndex("CountryId");

                    b.ToTable("cv_users");
                });

            modelBuilder.Entity("BPUIO_OneForEachOther.Models.UserBorough", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BoroughId")
                        .HasColumnType("int")
                        .IsRequired();

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2")
                        .IsRequired();

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(50)")
                        .IsRequired();

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(50)")
                        .IsRequired();

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2")
                        .IsRequired();

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(50)")
                        .IsRequired();

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("BoroughId");

                    b.HasIndex("UserId");

                    b.ToTable("cv_user_boroughs");
                });

            modelBuilder.Entity("BPUIO_OneForEachOther.Models.UserNotification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2")
                        .IsRequired();

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(50)")
                        .IsRequired();

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(30)")
                        .IsRequired();

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(255)")
                        .IsRequired();

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(4000)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2")
                        .IsRequired();

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(50)")
                        .IsRequired();

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("cv_user_notifications");
                });

            modelBuilder.Entity("BPUIO_OneForEachOther.Models.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2")
                        .IsRequired();

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(50)")
                        .IsRequired();

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .IsRequired();

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(30)")
                        .IsRequired();

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2")
                        .IsRequired();

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(50)")
                        .IsRequired();

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("cv_user_roles");
                });

            modelBuilder.Entity("BPUIO_OneForEachOther.Models.Borough", b =>
                {
                    b.HasOne("BPUIO_OneForEachOther.Models.City", "City")
                        .WithMany("Boroughs")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("BPUIO_OneForEachOther.Models.City", b =>
                {
                    b.HasOne("BPUIO_OneForEachOther.Models.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("BPUIO_OneForEachOther.Models.Order", b =>
                {
                    b.HasOne("BPUIO_OneForEachOther.Models.Borough", "Borough")
                        .WithMany("Orders")
                        .HasForeignKey("BoroughId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("BPUIO_OneForEachOther.Models.OrderDetail", b =>
                {
                    b.HasOne("BPUIO_OneForEachOther.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("BPUIO_OneForEachOther.Models.User", b =>
                {
                    b.HasOne("BPUIO_OneForEachOther.Models.AuthenticationScheme", "AuthenticationScheme")
                        .WithMany("Users")
                        .HasForeignKey("AuthenticationSchemeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("BPUIO_OneForEachOther.Models.Country", "Country")
                        .WithMany("Users")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("BPUIO_OneForEachOther.Models.UserBorough", b =>
                {
                    b.HasOne("BPUIO_OneForEachOther.Models.Borough", "Borough")
                        .WithMany("UserBoroughs")
                        .HasForeignKey("BoroughId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("BPUIO_OneForEachOther.Models.User", "User")
                        .WithMany("UserBoroughs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("BPUIO_OneForEachOther.Models.UserNotification", b =>
                {
                    b.HasOne("BPUIO_OneForEachOther.Models.User", "User")
                        .WithMany("UserNotifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("BPUIO_OneForEachOther.Models.UserRole", b =>
                {
                    b.HasOne("BPUIO_OneForEachOther.Models.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("BPUIO_OneForEachOther.Models.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
